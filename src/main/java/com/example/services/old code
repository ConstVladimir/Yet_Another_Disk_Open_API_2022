            Optional<SystemItem> past_item = systemItemRepository.getById(i.getId());
            // updating an existing SystemItem
            if (past_item.isPresent()){
                if (!i.getType().equals(past_item.get().getType())){
                    throw new SystemItemImportException(String.format("Inconsistency of types: current %s, new: %s", past_item.get().getType(), i.getType()));
                }
                // updating SystemItem in FOLDER
                if (i.getParentId().equals(past_item.get().getParentId())){

                }
                // Transfer SystemItem to new FOLDER from old FOLDER
                else {

                }
            }
            else {
                creatingNewSystemItem(i,longDate);
            }


            HashMap<String,Long> parentTreeCurrent = treeOfParentWithSize (i.getParentId());
            HashMap<String,Long> parentTreePast;

            SystemItem nowItem;
            SystemItem nowFolder;

            if (i.getType() == SystemItemImport.SystemItemType.FILE) {
                nowItem = new SystemItem(i.getId(),i.getUrl(),longDate,i.getParentId(),i.getType(),i.getSize(),null);

            } else if (i.getType() == SystemItemImport.SystemItemType.FOLDER) {
                if (past_item.isPresent()){
                    nowItem = new SystemItem(i.getId(),i.getUrl(),longDate,i.getParentId(),i.getType(),past_item.get().getSize(),past_item.get().getChildren());
                }
                else {
                    nowItem = new SystemItem(i.getId(),i.getUrl(),longDate,i.getParentId(),i.getType(),null,null);
                }
            }
            else throw new SystemItemImportException(String.format("Import item type %s is not correct", i.getType().toString()));
// Занесение данных в БД
            if (past_item.isPresent()){
                parentTreePast = treeOfParentWithSize (past_item.get().getParentId());
                systemItemRepository.save(nowItem);
            }
            else { // ошибка в функции save  вынуждает делать свой метод
                systemItemRepository.setItem(nowItem.getId(),
                        nowItem.getUrl(),
                        nowItem.getDate(),
                        nowItem.getParentId(),
                        nowItem.getType(),
                        nowItem.getSize(),
                        nowItem.getChildren());
            }

            if (!parentTreeCurrent.isEmpty()){
                SystemItem exist_parent = getParent(nowItem.getParentId());
                systemItemRepository.updateParentFolderAndAddItemToChildren(
                        i.getParentId(),
                        longDate,
                        Optional.ofNullable(parentTreeCurrent.remove(nowItem.getParentId())).orElse(0L)+Optional.ofNullable(nowItem.getSize()).orElse(0L), //скрывается null при неудалении ненайденного элемента
                        addFileToChildrenString(exist_parent.getChildren(), nowItem.getId()));

                for (Map.Entry<String, Long> pair : parentTreeCurrent.entrySet()) {
                    systemItemRepository.updateParentFolder(
                            pair.getKey(),
                            longDate,
                            Optional.ofNullable(pair.getValue()).orElse(0L) + Optional.ofNullable(nowItem.getSize()).orElse(0L)
                    );
                }
            }
            /*nowFolder = new SystemItem(exist_parent.getParentId(), //обновдление первого родителя при импорте объекта
                    exist_parent.getUrl(),
                    longDate,
                    exist_parent.getParentId(),
                    SystemItem.SystemItemType.FOLDER,
                    Optional.of(exist_parent.getSize()).orElse(0L) + Optional.of(nowItem.getSize()).orElse(0L),
                    addFileToChildrenString(exist_parent.getChildren(), nowItem.getId()));*/